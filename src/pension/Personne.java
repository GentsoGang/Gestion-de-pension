/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pension;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Gael
 */
public class Personne extends javax.swing.JFrame {
    
    public Connection connection;
    public PreparedStatement pst;
    public PreparedStatement pst1;
    private int selectedRowIndex;

    /**
     * Creates new form Personne
     */
    public Personne() {
        initComponents();
        connection = DatabaseConnection.getConnection();
        table_load();
        jTable2.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (jTable2.getSelectedRow() != -1) {
                    selectedRowIndex = jTable2.getSelectedRow();
                    // Appeler la méthode pour afficher les informations de la ligne sélectionnée
                    displaySelectedRowPersonne();
                }
            }
        });
        
      
        
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); 
        this.setLocationRelativeTo(null);

    }
    
    private void table_load() {
        try {
            pst = connection.prepareStatement("SELECT * FROM personne");
            ResultSet rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs)); // Utilisation de la méthode buildTableModel
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        try {
            pst = connection.prepareStatement("SELECT * FROM conjoint");
            ResultSet rs = pst.executeQuery();
            TableConjoint.setModel(DbUtils.resultSetToTableModel(rs)); // Utilisation de la méthode buildTableModel
        } catch (SQLException e) {
            e.printStackTrace();
        }        
        

        
    }
    
    private void displaySelectedRowPersonne() {
        // Récupérer les valeurs des colonnes de la ligne sélectionnée
        String nom = jTable2.getValueAt(selectedRowIndex, 1).toString();
        String prenom = jTable2.getValueAt(selectedRowIndex, 2).toString();
        java.util.Date datenais = (java.util.Date) jTable2.getValueAt(selectedRowIndex, 3);
        String diplome = jTable2.getValueAt(selectedRowIndex, 4).toString();
        String contact = jTable2.getValueAt(selectedRowIndex, 5).toString();
        String statutString = jTable2.getValueAt(selectedRowIndex, 6).toString();
        boolean statut = Boolean.parseBoolean(statutString);
        
        String situation = jTable2.getValueAt(selectedRowIndex, 7).toString();
        String nomConjoint = jTable2.getValueAt(selectedRowIndex, 8).toString();
        String prenomConjoint = jTable2.getValueAt(selectedRowIndex, 9).toString();

        // Afficher les valeurs dans les champs de texte correspondants
        txtNom.setText(nom);
        txtPrenom.setText(prenom);
        txtDate.setDate(datenais);
        txtDiplome.setText(diplome);
        txtContact.setText(contact);
        //txtStatut.setBoolean(statut);
        txtSituation.setSelectedItem(situation);
        txtNomConjoint.setText(nomConjoint);
        txtPrenomConjoint.setText(prenomConjoint);
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSearchName = new javax.swing.JTextField();
        btnSearchName = new javax.swing.JButton();
        txtNom = new javax.swing.JTextField();
        nom = new javax.swing.JLabel();
        txtPrenom = new javax.swing.JTextField();
        prenom = new javax.swing.JLabel();
        datenais = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        diplome = new javax.swing.JLabel();
        txtDiplome = new javax.swing.JTextField();
        contact = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        statut = new javax.swing.JLabel();
        Vivant = new javax.swing.JRadioButton();
        Decede = new javax.swing.JRadioButton();
        situation = new javax.swing.JLabel();
        txtSituation = new javax.swing.JComboBox<>();
        nomConjoint = new javax.swing.JLabel();
        txtNomConjoint = new javax.swing.JTextField();
        prenomConjoint = new javax.swing.JLabel();
        txtPrenomConjoint = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableConjoint = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pension/olo.png"))); // NOI18N
        jLabel2.setText("PERSONNE");
        jLabel2.setOpaque(true);

        btnSearchName.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnSearchName.setForeground(new java.awt.Color(0, 51, 51));
        btnSearchName.setText("RECHERCHER UN NOM");
        btnSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNameActionPerformed(evt);
            }
        });

        nom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nom.setForeground(new java.awt.Color(0, 0, 0));
        nom.setText("NOM : ");

        txtPrenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrenomActionPerformed(evt);
            }
        });

        prenom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        prenom.setForeground(new java.awt.Color(0, 0, 0));
        prenom.setText("PRENOM");

        datenais.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        datenais.setForeground(new java.awt.Color(0, 0, 0));
        datenais.setText("DATE DE NAISSANCE :");

        txtDate.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                txtDateComponentAdded(evt);
            }
        });

        diplome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        diplome.setForeground(new java.awt.Color(0, 0, 0));
        diplome.setText("DIPLOME :");

        contact.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        contact.setForeground(new java.awt.Color(0, 0, 0));
        contact.setText("CONTACT :");

        statut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        statut.setForeground(new java.awt.Color(0, 0, 0));
        statut.setText("STATUT :");

        Vivant.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Vivant.setForeground(new java.awt.Color(255, 255, 255));
        Vivant.setText("Vivant");

        Decede.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Decede.setForeground(new java.awt.Color(255, 255, 255));
        Decede.setText("Dedede");

        situation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        situation.setForeground(new java.awt.Color(0, 0, 0));
        situation.setText("SITUATION :");

        txtSituation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marié(e)", "Divorcé(e)", "Veuf(ve)" }));

        nomConjoint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nomConjoint.setForeground(new java.awt.Color(0, 0, 0));
        nomConjoint.setText("NOM DU CONJOINT :");

        txtNomConjoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomConjointActionPerformed(evt);
            }
        });

        prenomConjoint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        prenomConjoint.setForeground(new java.awt.Color(0, 0, 0));
        prenomConjoint.setText("PRENOM CONJOINT :");

        txtPrenomConjoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrenomConjointActionPerformed(evt);
            }
        });

        buttonSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonSave.setForeground(new java.awt.Color(0, 51, 51));
        buttonSave.setText("SAVE");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(0, 51, 51));
        buttonUpdate.setText("UPDATE");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        TableConjoint.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(TableConjoint);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        buttonDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(0, 51, 51));
        buttonDelete.setText("DELETE");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("RETOUR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchName)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prenom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(690, 690, 690))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(contact)
                                    .addGap(43, 43, 43)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(diplome)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(56, 56, 56)
                                            .addComponent(statut)
                                            .addGap(18, 18, 18)
                                            .addComponent(Vivant))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(datenais)
                                    .addGap(28, 28, 28)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addComponent(Decede))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(59, 59, 59)
                                    .addComponent(txtDiplome, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(situation)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(buttonDelete)))
                            .addGap(42, 42, 42)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(buttonUpdate)
                                    .addGap(30, 30, 30)
                                    .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(47, 47, 47)
                                    .addComponent(jButton1))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtSituation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(nomConjoint)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNomConjoint, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27)
                                    .addComponent(prenomConjoint)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPrenomConjoint, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prenom)
                            .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(datenais, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(diplome)
                                        .addComponent(txtDiplome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statut, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Vivant, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Decede))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSituation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(situation)
                    .addComponent(nomConjoint)
                    .addComponent(txtNomConjoint, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prenomConjoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPrenomConjoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDelete)
                    .addComponent(buttonUpdate)
                    .addComponent(buttonSave)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrenomActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        //PERSONNE
        
        boolean statut = true;
        if (Vivant.isSelected()) {
            statut = true;
        } else {
            statut = false;
        }
        String nom = txtNom.getText();
        String prenom = txtPrenom.getText();
        java.util.Date date = txtDate.getDate();
        String datenais = new SimpleDateFormat("yyyy-MM-dd").format(date);
        String diplome = txtDiplome.getText(); 
        String contact = txtContact.getText(); 
        statut = Vivant.isSelected();
        String situation = txtSituation.getSelectedItem().toString();
        String nomConjoint = txtNomConjoint.getText(); 
        String prenomConjoint = txtPrenomConjoint.getText(); 
    
    
    
        
        try {
            pst = connection.prepareStatement("INSERT INTO personne (nom, prenom, datenais,diplome,contact,statut,situation,nomConjoint,prenomConjoint) VALUES (?, ?, ?,?,?,?,?,?,?)");
            pst.setString(1, nom);
            pst.setString(2, prenom);
            pst.setString(3, datenais);
            pst.setString(4, diplome);
            pst.setString(5, contact);
            pst.setBoolean(6, statut);
            pst.setString(7, situation);
            pst.setString(8, nomConjoint);
            pst.setString(9, prenomConjoint);
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(null, "Ajout effectué");
            //table_load();
            txtNom.setText("");
            txtPrenom.setText("");
            txtDate.setDate(null);
            txtDiplome.setText("");
            txtContact.setText("");
            //txtStatut.setSelectedItem(null);
            txtSituation.setSelectedItem(null);
            txtNomConjoint.setText("");
            txtPrenomConjoint.setText("");
            txtNom.requestFocus();
            
            try {
                pst1= connection.prepareStatement("insert into conjoint (nomConjoint, PrenomConjoint, montant) values (?,?,0)"); 
                pst1.setString(1, nomConjoint);
                pst1.setString(2, prenomConjoint);
                pst1.executeUpdate();  
                JOptionPane.showMessageDialog(null, "Ajout effectué");
                table_load();           
                txtNomConjoint.setText("");
                txtPrenomConjoint.setText("");
                txtNom.requestFocus();
            } catch (Exception e) {
            } finally {
            }
    
            
        }
        catch (SQLException e) {
        e.printStackTrace();
        }
       

    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
    String nom = txtNom.getText();
    String prenom = txtPrenom.getText();
    java.util.Date date = txtDate.getDate();
    String datenais = new SimpleDateFormat("yyyy-MM-dd").format(date);
    String diplome = txtDiplome.getText(); 
    String contact = txtContact.getText(); 
    boolean statut = Vivant.isSelected(); 
    String situation = txtSituation.getSelectedItem().toString(); 
    String nomConjoint = txtNomConjoint.getText(); 
    String prenomConjoint = txtPrenomConjoint.getText(); 
    
    String im = jTable2.getValueAt(selectedRowIndex, 0).toString(); 
    
        try {

            pst = connection.prepareStatement("UPDATE personne SET nom = ?, prenom = ?, datenais = ?, diplome = ?, contact = ? , statut = ?, situation = ?, nomConjoint = ?, prenomConjoint = ? WHERE im = ?");
            pst.setString(1, nom);
            pst.setString(2, prenom);
            pst.setString(3, datenais);
            pst.setString(4, diplome);
            pst.setString(5, contact);
            pst.setBoolean(6, statut);
            pst.setString(7, situation);
            pst.setString(8, nomConjoint);
            pst.setString(9, prenomConjoint);
            pst.setString(10, im);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Mise à jour effectuée");
            table_load(); // Recharger la table avec les données mises à jour
            txtNom.setText("");
            txtPrenom.setText("");
            txtDate.setDate(null);
            txtDiplome.setText("");
            txtContact.setText("");
            //txtStatut.setSelectedItem(null);
            txtSituation.setSelectedItem(null);
            txtNomConjoint.setText("");
            txtPrenomConjoint.setText("");
            txtNom.requestFocus();
        } catch (SQLException e) {
            e.printStackTrace();
        }



        
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
    // Vérifier si une ligne est sélectionnée
    if (jTable2.getSelectedRow() != -1) {
        // Récupérer l'ID de l'employé sélectionné dans la table
        int selectedRowIndex = jTable2.getSelectedRow();
        String id = jTable2.getValueAt(selectedRowIndex, 0).toString();

        try {
            pst = connection.prepareStatement("DELETE FROM personne WHERE im = ?");
            pst.setString(1, id);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Suppression effectuée");
            table_load(); // Recharger la table avec les données mises à jour
            txtNom.setText("");
            txtPrenom.setText("");
            txtDate.setDate(null);
            txtDiplome.setText("");
            txtContact.setText("");
            txtNomConjoint.setText("");
            txtPrenomConjoint.setText("");
            txtNom.requestFocus();
            selectedRowIndex = -1; // Réinitialiser la valeur de selectedRowIndex à -1
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void txtDateComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_txtDateComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateComponentAdded

    private void btnSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNameActionPerformed
           // TODO add your handling code here:
        
    String searchTerm = txtSearchName.getText();
    String query = "SELECT * FROM personne WHERE nom LIKE ?";
    try {
        pst = connection.prepareStatement(query);
        pst.setString(1, "%" + searchTerm + "%");
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            String im = rs.getString("im");
            String nom = rs.getString("nom");
            String prenom = rs.getString("prenom");
            String diplome = rs.getString("diplome");
            String contact = rs.getString("contact");
            boolean statut = rs.getBoolean("statut");
            String nomConjoint = rs.getString("nomConjoint");
            String prenomConjoint = rs.getString("prenomConjoint");
            java.util.Date datenais = rs.getDate("datenais");

            //txtIm.setText(im);
            txtNom.setText(nom);
            txtPrenom.setText(prenom);
            txtDiplome.setText(diplome);
            txtContact.setText(contact);

            // Set the date in JDateChooser
            txtDate.setDate(datenais);

            Decede.setSelected(statut);
            txtNomConjoint.setText(nomConjoint);
            txtPrenomConjoint.setText(prenomConjoint);
        } else {
            // Réinitialiser les champs si aucun résultat trouvé
            txtNom.setText("");
            txtPrenom.setText("");
            txtDiplome.setText("");
            txtContact.setText("");
            txtDate.setDate(null);
            //checkBoxStatut.setSelected(statut);
            txtNomConjoint.setText("");
            txtPrenomConjoint.setText("");
            JOptionPane.showMessageDialog(this, "Aucun résultat trouvé.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }      
    }//GEN-LAST:event_btnSearchNameActionPerformed

    private void txtPrenomConjointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrenomConjointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrenomConjointActionPerformed

    private void txtNomConjointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomConjointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomConjointActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                this.hide();
                  HOME obj = new HOME();
        obj.show();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Personne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Personne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Personne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Personne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Personne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Decede;
    private javax.swing.JTable TableConjoint;
    private javax.swing.JRadioButton Vivant;
    private javax.swing.JButton btnSearchName;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel contact;
    private javax.swing.JLabel datenais;
    private javax.swing.JLabel diplome;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel nom;
    private javax.swing.JLabel nomConjoint;
    private javax.swing.JLabel prenom;
    private javax.swing.JLabel prenomConjoint;
    private javax.swing.JLabel situation;
    private javax.swing.JLabel statut;
    private javax.swing.JTextField txtContact;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtDiplome;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNomConjoint;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtPrenomConjoint;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JComboBox<String> txtSituation;
    // End of variables declaration//GEN-END:variables
}
