/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pension;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Gael
 */
public class Payer extends javax.swing.JFrame {
    
    public Connection connection;
    public PreparedStatement pst;
    public PreparedStatement pst2;
    private int selectedRowIndex;
    private String categorieTarif;


    /**
     * Creates new form Payer
     */
    public Payer() {
        initComponents();
        connection = DatabaseConnection.getConnection();
        table_load();
        TablePayer.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (TablePayer.getSelectedRow() != -1) {
                    selectedRowIndex = TablePayer.getSelectedRow();
                    // Appeler la méthode pour afficher les informations de la ligne sélectionnée
                    displaySelectedRow();
                }
            }
        });

        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });        
        
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); 
        this.setLocationRelativeTo(null);        
        
    }
    
    private void table_load() {
        try {
            pst = connection.prepareStatement("SELECT * FROM payer");
            ResultSet rs = pst.executeQuery();
            TablePayer.setModel(DbUtils.resultSetToTableModel(rs)); // Utilisation de la méthode buildTableModel
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
private void displaySelectedRow() {
    // Récupérer les valeurs des colonnes de la ligne sélectionnée
    String im = TablePayer.getValueAt(selectedRowIndex, 0).toString();
    java.util.Date date = (java.util.Date) TablePayer.getValueAt(selectedRowIndex, 1);
    String numTarif = TablePayer.getValueAt(selectedRowIndex, 2).toString();

    //String nom = TablePayer.getValueAt(selectedRowIndex, 1).toString();
    //String prenom = TablePayer.getValueAt(selectedRowIndex, 2).toString();

    //String montant = TablePayer.getValueAt(selectedRowIndex, 4).toString();


    // Afficher les valeurs dans les champs de texte correspondants
    txtIm.setText(im);
    //txtNom.setText(nom);
    //txtPrenom.setText(prenom);
    txtDatePayer.setDate(date);
    //txtMontant.setText(montant);
    txtNumTarif.setText(numTarif);
}  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtIm = new javax.swing.JTextField();
        im = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        nom = new javax.swing.JLabel();
        txtPrenom = new javax.swing.JTextField();
        prenom = new javax.swing.JLabel();
        txtDatePayer = new com.toedter.calendar.JDateChooser();
        datePayer = new javax.swing.JLabel();
        montant = new javax.swing.JLabel();
        txtMontant = new javax.swing.JTextField();
        montant1 = new javax.swing.JLabel();
        txtNumTarif = new javax.swing.JTextField();
        buttonPayer = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePayer = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pension/p.png"))); // NOI18N
        jLabel2.setText("PAYER");
        jLabel2.setOpaque(true);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 51, 51));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        im.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        im.setForeground(new java.awt.Color(0, 0, 0));
        im.setText("Im :");

        nom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nom.setForeground(new java.awt.Color(0, 0, 0));
        nom.setText("NOM :");

        prenom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prenom.setForeground(new java.awt.Color(0, 0, 0));
        prenom.setText("PRENOM:");

        datePayer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        datePayer.setForeground(new java.awt.Color(0, 0, 0));
        datePayer.setText("Date : ");

        montant.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        montant.setForeground(new java.awt.Color(0, 0, 0));
        montant.setText("Montant :");

        montant1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        montant1.setForeground(new java.awt.Color(0, 0, 0));
        montant1.setText("Num Tarif :");

        buttonPayer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonPayer.setForeground(new java.awt.Color(0, 51, 51));
        buttonPayer.setText("PAYER");
        buttonPayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPayerActionPerformed(evt);
            }
        });

        buttonDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(0, 51, 51));
        buttonDelete.setText("DELETE");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(0, 51, 51));
        buttonUpdate.setText("UPDATE");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        TablePayer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePayer);

        jButton2.setText("RETOUR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(buttonPayer)
                                                .addGap(21, 21, 21)
                                                .addComponent(buttonDelete))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(datePayer, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(im, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(txtIm, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(31, 31, 31)
                                        .addComponent(buttonUpdate))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtDatePayer, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(montant, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMontant, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39)
                                        .addComponent(montant1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                        .addComponent(txtNumTarif, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(28, 28, 28))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prenom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(96, 96, 96))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(im, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIm)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prenom)
                                .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48)
                        .addComponent(datePayer, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDatePayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(montant, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMontant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(montant1)
                        .addComponent(txtNumTarif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPayer)
                    .addComponent(buttonDelete)
                    .addComponent(buttonUpdate)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        String searchTerm = txtSearch.getText();
    //String query = "SELECT personne.im, tarif.numTarif FROM personne  JOIN tarif  ON personne.im = tarif.im WHERE personne.nom LIKE ?";
    //String query = "SELECT im FROM personne where im LIKE ?";
    String query = "SELECT * FROM personne where im LIKE ?";
    try {
        pst = connection.prepareStatement(query);
        pst.setString(1, "%" + searchTerm + "%");
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
        String im = rs.getString("im");
        String nom = rs.getString("nom");
        String prenom = rs.getString("prenom");
        String diplome = rs.getString("diplome");
               //String categorie = rs.getString("situation");
            //String date = rs.getString("date");            
            //String montant = rs.getString("montant");  
            txtIm.setText(im);
            txtNom.setText(nom);
            txtPrenom.setText(prenom);
            //txtPrenom.setText(prenom);
            //txtMontant.setText(montant);
            
            
        String query1 = "SELECT numTarif,montant FROM tarif WHERE diplome = '" + diplome + "' ";;
        pst2= connection.prepareStatement(query1);

            ResultSet rs2 = pst2.executeQuery();
            if (rs2.next()) {
                String numTarif= rs2.getString("numTarif");
                String montant = rs2.getString("montant");
                txtMontant.setText(montant);
                txtNumTarif.setText(numTarif);
                
                //int m = rs2.getInt("Montant");
                //m = (m*40)/100;
            } else {
                txtMontant.setText("");
            }


            //txtNumTarif.setText(numTarif);                
        } else {
            txtNom.setText("");
            txtPrenom.setText("");
            //txtNumTarif.setText(""); // Réinitialiser le champ txtNumTarif s'il n'y a pas de résultat
            
            JOptionPane.showMessageDialog(this, "Aucun résultat trouvé.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
        
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void buttonPayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPayerActionPerformed
        // TODO add your handling code here:
        
    // TODO add your handling code here:
    
    String im = txtIm.getText();
    String numTarif= txtNumTarif.getText();
    java.util.Date date = txtDatePayer.getDate();
    String datePayer = new SimpleDateFormat("yyyy-MM-dd").format(date);    
    
    try {
        pst = connection.prepareStatement("INSERT INTO payer (im, numTarif, date) VALUES (?, ?, ?)");
        pst.setString(1, im);
        pst.setString(2, numTarif);
        pst.setString(3, datePayer);

        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Ajout effectué");
        table_load();
        txtNom.setText("");
        txtDatePayer.setDate(null);
        txtNom.requestFocus();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    boolean statut = false;
    
    try {
        // Récupérer la valeur de statut de la table personne pour l'IM donné
        String query = "SELECT statut FROM personne WHERE im = ?";
        pst = connection.prepareStatement(query);
        pst.setString(1, im);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            statut = rs.getBoolean("statut");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

    try {
        if (statut) {
            // Si le statut est vrai, mettez la valeur de montant à 0
            pst = connection.prepareStatement("UPDATE conjoint SET montant = 0 WHERE numPension = ?");
            pst.setString(1, im);
            pst.executeUpdate();
        } else {
            // Sinon, calculez le montant en fonction de la valeur de txtMontant
            int montantInt = Integer.parseInt(txtMontant.getText());
            int montantConjoint = (int) (montantInt * 0.4);
            pst = connection.prepareStatement("UPDATE conjoint SET montant = ? WHERE numPension = ?");
            pst.setInt(1, montantConjoint);
            pst.setString(2, im);
            pst.executeUpdate();
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }        
        
    }//GEN-LAST:event_buttonPayerActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        
    String im = txtIm.getText();
    String numTarif = txtNumTarif.getText();
    java.util.Date date = txtDatePayer.getDate();
    String datePayer = new SimpleDateFormat("yyyy-MM-dd").format(date); 

    try {
        pst = connection.prepareStatement("UPDATE payer SET date = ? WHERE im = ? AND numTarif = ?");
        pst.setString(1, datePayer);
        pst.setString(2, im);
        pst.setString(3, numTarif);

        int rowsAffected = pst.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Mise à jour effectuée");
            table_load(); // Recharger la table avec les données mises à jour
            txtNom.setText("");
            txtDatePayer.setDate(null);
            txtNom.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Aucune ligne modifiée. Vérifiez les valeurs d'IM et de NumTarif.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }   
        
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        
// Récupérer les valeurs de la ligne sélectionnée
     
          String im = txtIm.getText();
            String numTarif = txtNumTarif.getText();
           java.util.Date date = txtDatePayer.getDate();
           String datePayer = new SimpleDateFormat("yyyy-MM-dd").format(date);
     
        
        
        
        try {
            pst = connection.prepareStatement("DELETE FROM payer WHERE im = ? ");
               
            pst.setString(1, im);
          

            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Suppression effectuée");
                table_load(); // Recharger la table avec les données mises à jour
                txtNom.setText("");
                txtDatePayer.setDate(null);
                txtNom.requestFocus();
            } else{
                 JOptionPane.showMessageDialog(null, "Erreur");
            }
            
   
        } catch (SQLException e) {
            e.printStackTrace();
        }      
        
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
              PDF p = new PDF();
              p.pdf(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                this.hide();
                  HOME obj = new HOME();
        obj.show();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePayer;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonPayer;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel datePayer;
    private javax.swing.JLabel im;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel montant;
    private javax.swing.JLabel montant1;
    private javax.swing.JLabel nom;
    private javax.swing.JLabel prenom;
    protected static com.toedter.calendar.JDateChooser txtDatePayer;
    protected static javax.swing.JTextField txtIm;
    protected static javax.swing.JTextField txtMontant;
    protected static javax.swing.JTextField txtNom;
    protected static javax.swing.JTextField txtNumTarif;
    protected static javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
